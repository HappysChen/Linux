*******
 一、线程
   1、概念
         线程（英语：thread）是操作系统能够进行运算调度的最小单位。大部分情况下，它被包含在进程之中，是进程中的实际运作单位。
     一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务。
         在Unix System V及SunOS中也被称为轻量进程（lightweight processes），但轻量进程更多指内核线程（kernel thread），而把用户线程（user thread）称为线程。
         线程是独立调度和分派的基本单位。
         同一进程中的多条线程将共享该进程中的全部系统资源，如虚拟地址空间，文件描述符和信号处理、用户ID和组ID等
         但同一进程中的多个线程有各自的调用栈（call stack），自己的寄存器环境（register context），自己的线程本地存储（thread-local storage）。
         一个进程可以有很多线程来处理，每条线程并行执行不同的任务。
         LWP： 轻量级的进程，本质是进程（在Linux环境下）
         进程：独立地址空间，拥有PCB
         线程：也有PCB，但没有独立的地址空间（共享）
   2、线程与进程的区别：
         是否共享地址空间，举例：独居（进程），合租（线程）。
         Linux下：线程：最小的执行单位
         进程：最小分配资源单位，可看成是只有一个线程的进程。
         
   3、Linux内核线程实现原理
        1、轻量级进程，也有PCB，创建线程使用的底层函数和进程一样，都是clone
        2、从内核里看进程和线程是一样的，都有各自不同的PCB，但是PCB中指向内存资源的三级页表是相同的
        3、进程可以蜕变成线程
        4、线程可以看做寄存器和栈的集合
        5、在linux下，线程是最小的执行单位，进程是最小的分配资源单位
        
     查看LWP号：ps-Lf pid 查看指定线程的lwp号。 
       
   4、线程非共享资源
      1、线程ID
      2、处理器现场和栈指针（内核栈）
      3、独立的栈空间（用户空间栈）
      4、errno变量
      5、信号屏蔽字
      6、调度优先级
  5、线程优、缺点  百度
  
  6、线程控制函数
     
       
  
  
  
  
  
  
  
       






